1. Designing the UI using Unity's UGUI:

Start a new Unity project or use your existing project.
Go to Hierarchy -> Right Click -> UI -> Canvas to create a new canvas. This will be where your UI elements live.
Right-click on the canvas and select UI -> Panel. This will serve as the background for your guild UI.
Name this panel GuildUI.
Inside the GuildUI panel, create the following elements:

Text component for the title, e.g., "Guild Members".
Scroll View component for listing online and offline members.
Input Field component for entering the name of a player you want to invite.
Button component labeled "Invite" to send out guild invites.
2. Implementing the Logic:


Right-click in the Assets window, select Create -> C# Script, and name it GuildManager.

Attach the GuildManager script to an empty game object in the scene.
Drag and connect the required components from your GuildUI to the script.
Create a prefab for the member listing (just a simple Text component would suffice) and drag it into the memberPrefab slot in your script.  (MEMBER PREFAB)
Connect the Invite button's onClick event to the InvitePlayer method.

-----------------------------------------------------------------------

1. Creating the InputField:

Select the GuildUI panel in the hierarchy.
Right-click on the panel, select UI, and then Input Field.
Rename the new Input Field to InviteInputField.
Adjust its size and position to where you want it on the GuildUI panel.
2. Customizing the InputField:

Click on the InviteInputField to see its properties in the inspector.
Under the Placeholder text (a child of InviteInputField), modify the text to say something like "Enter player name...".
Under the Text child component (also a child of InviteInputField), this is where the user's input will be shown. Adjust its properties as desired (like font size, color, etc.).
You can adjust the Character Limit in the InviteInputField component if you want to limit the number of characters a player can input (maybe to match the maximum character length for player names in your game).
Make sure to check the Hide Mobile Input option if you're designing for mobile, so the native keyboard does not obstruct the view.
3. Connect the InputField to the Script:

Select the GameObject with the GuildManager script attached.
In the Inspector, you will see the InviteInputField variable under the GuildManager script.
Drag and drop the InviteInputField from the Hierarchy into this slot.
Now, when you call the InvitePlayer method in your GuildManager script, it will access the player's input from this field using inviteInputField.text.

That's it! Your InviteInputField is set up and ready to capture player names for guild invites.
-----------------------------------------------
Members OnlineMembersContainer

1. Setting up the Scroll View: 

In your GuildUI panel, right-click and then choose UI -> Scroll View. This creates a new Scroll View. Rename it to OnlineMembersScroll.
Adjust its size and position where you want the online members' list to appear.
Inside this Scroll View, you'll find a viewport (Scroll View -> Viewport) and inside that, a content panel (Scroll View -> Viewport -> Content). This Content is where you'll instantiate the member entries.
2. Preparing the Content Panel (OnlineMembersContainer):

Rename the Content panel to OnlineMembersContainer.
Since this container will hold the list of online members, it'll dynamically resize based on the number of members. So, add a Vertical Layout Group component to the OnlineMembersContainer to organize the member entries vertically. This component will automatically arrange all child objects vertically.
Also, add a Content Size Fitter component to the OnlineMembersContainer. Set its Vertical Fit property to Preferred Size. This ensures the container resizes based on its content.
3. Create a Sample Member Entry:

Right-click on the OnlineMembersContainer, and select UI -> Text to create a new text object. This will be a sample member entry. Adjust its properties (e.g., font size, color) as desired.
Rename this text object to MemberEntrySample.
For better visualization, you can set the text to something like "SamplePlayerName".
This MemberEntrySample will be used as a template or prefab for your actual online members. Drag the MemberEntrySample object from the Hierarchy into your Assets window to make it a prefab. After doing that, you can delete (or disable) the MemberEntrySample in the Hierarchy since you'll be instantiating new entries from the prefab.
4. Connect to the GuildManager Script:

Select the GameObject with the GuildManager script attached.
In the Inspector, you'll see the OnlineMembersContainer slot (or field). Drag and drop the OnlineMembersContainer from the Hierarchy into this slot.
---------------------------------------------------------------
1. Setting up the Scroll View:

In your GuildUI panel, right-click and then choose UI -> Scroll View. This creates a new Scroll View. Rename it to OnlineMembersScroll.
Adjust its size and position where you want the online members' list to appear.
Inside this Scroll View, you'll find a viewport (Scroll View -> Viewport) and inside that, a content panel (Scroll View -> Viewport -> Content). This Content is where you'll instantiate the member entries.
2. Preparing the Content Panel (OnlineMembersContainer):

Rename the Content panel to OnlineMembersContainer.
Since this container will hold the list of online members, it'll dynamically resize based on the number of members. So, add a Vertical Layout Group component to the OnlineMembersContainer to organize the member entries vertically. This component will automatically arrange all child objects vertically.
Also, add a Content Size Fitter component to the OnlineMembersContainer. Set its Vertical Fit property to Preferred Size. This ensures the container resizes based on its content.
3. Create a Sample Member Entry:

Right-click on the OnlineMembersContainer, and select UI -> Text to create a new text object. This will be a sample member entry. Adjust its properties (e.g., font size, color) as desired.
Rename this text object to MemberEntrySample.
For better visualization, you can set the text to something like "SamplePlayerName".
This MemberEntrySample will be used as a template or prefab for your actual online members. Drag the MemberEntrySample object from the Hierarchy into your Assets window to make it a prefab. After doing that, you can delete (or disable) the MemberEntrySample in the Hierarchy since you'll be instantiating new entries from the prefab.
4. Connect to the GuildManager Script:

Select the GameObject with the GuildManager script attached.
In the Inspector, you'll see the OnlineMembersContainer slot (or field). Drag and drop the OnlineMembersContainer from the Hierarchy into this slot.

public Transform offlineMembersContainer; // Drag your offline members container inside the scroll view here.

Save and switch back to Unity.
Select the GameObject with the GuildManager script attached.
In the Inspector, you'll now see the OfflineMembersContainer slot (or field). Drag and drop the OfflineMembersContainer from the Hierarchy into this slot.



